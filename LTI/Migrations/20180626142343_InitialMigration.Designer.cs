// <auto-generated />
using System;
using LTI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LTI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180626142343_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LTI.Models.Claim", b =>
                {
                    b.Property<int>("ClaimID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimText")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int?>("StudentID");

                    b.Property<int?>("TeacherID");

                    b.HasKey("ClaimID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("LTI.Models.Complain", b =>
                {
                    b.Property<int>("ComplainID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComplainText")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int?>("StudentID");

                    b.Property<int?>("TeacherID");

                    b.HasKey("ComplainID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Complains");
                });

            modelBuilder.Entity("LTI.Models.Configuration", b =>
                {
                    b.Property<int>("ConfigurationID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasMaxLength(30);

                    b.Property<string>("Value")
                        .HasMaxLength(1200);

                    b.HasKey("ConfigurationID");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("LTI.Models.HistoryStudent", b =>
                {
                    b.Property<int>("HistoryStudentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComputerName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("HasFilledSurvey");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<DateTime>("RegisteredDate");

                    b.Property<string>("SubjectName")
                        .HasMaxLength(80);

                    b.Property<string>("SubjectSection")
                        .HasMaxLength(10);

                    b.HasKey("HistoryStudentID");

                    b.ToTable("HistoryStudents");
                });

            modelBuilder.Entity("LTI.Models.HistoryTeacher", b =>
                {
                    b.Property<int>("HistoryTeacherID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComputerName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("HasFilledSurvey");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<DateTime>("RegisteredDate");

                    b.HasKey("HistoryTeacherID");

                    b.ToTable("HistoryTeachers");
                });

            modelBuilder.Entity("LTI.Models.Norma", b =>
                {
                    b.Property<int>("NormaID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("NormaContent")
                        .IsRequired()
                        .HasMaxLength(1250);

                    b.HasKey("NormaID");

                    b.ToTable("Normas");
                });

            modelBuilder.Entity("LTI.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComputerName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("HasFilledSurvey");

                    b.Property<int?>("HistoryStudentID");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<DateTime>("RegisteredDate");

                    b.Property<string>("SubjectCode")
                        .HasMaxLength(20);

                    b.Property<string>("SubjectName")
                        .HasMaxLength(140);

                    b.Property<string>("SubjectSection")
                        .HasMaxLength(10);

                    b.Property<int?>("TeacherID");

                    b.HasKey("StudentID");

                    b.HasIndex("HistoryStudentID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LTI.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<int?>("TeacherID");

                    b.HasKey("SubjectID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("LTI.Models.Suggestion", b =>
                {
                    b.Property<int>("SuggestionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("StudentID");

                    b.Property<string>("SuggestionText")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int?>("TeacherID");

                    b.HasKey("SuggestionID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Suggestion");
                });

            modelBuilder.Entity("LTI.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComputerName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<bool>("HasFilledSurvey");

                    b.Property<int?>("HistoryTeacherID");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<DateTime>("RegisteredDate");

                    b.HasKey("TeacherID");

                    b.HasIndex("HistoryTeacherID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("LTI.Models.Trimestre", b =>
                {
                    b.Property<int>("TrimestreID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Active");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120);

                    b.Property<DateTime>("StartDate");

                    b.HasKey("TrimestreID");

                    b.ToTable("Trimestres");
                });

            modelBuilder.Entity("LTI.Models.Claim", b =>
                {
                    b.HasOne("LTI.Models.Student", "Student")
                        .WithMany("Claims")
                        .HasForeignKey("StudentID");

                    b.HasOne("LTI.Models.Teacher", "Teacher")
                        .WithMany("Claims")
                        .HasForeignKey("TeacherID");
                });

            modelBuilder.Entity("LTI.Models.Complain", b =>
                {
                    b.HasOne("LTI.Models.Student", "Student")
                        .WithMany("Complains")
                        .HasForeignKey("StudentID");

                    b.HasOne("LTI.Models.Teacher", "Teacher")
                        .WithMany("Complains")
                        .HasForeignKey("TeacherID");
                });

            modelBuilder.Entity("LTI.Models.Student", b =>
                {
                    b.HasOne("LTI.Models.HistoryStudent", "HistoryStudent")
                        .WithMany("Students")
                        .HasForeignKey("HistoryStudentID");

                    b.HasOne("LTI.Models.Teacher", "Teacher")
                        .WithMany("Students")
                        .HasForeignKey("TeacherID");
                });

            modelBuilder.Entity("LTI.Models.Subject", b =>
                {
                    b.HasOne("LTI.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherID");
                });

            modelBuilder.Entity("LTI.Models.Suggestion", b =>
                {
                    b.HasOne("LTI.Models.Student", "Student")
                        .WithMany("Suggestions")
                        .HasForeignKey("StudentID");

                    b.HasOne("LTI.Models.Teacher", "Teacher")
                        .WithMany("Suggestions")
                        .HasForeignKey("TeacherID");
                });

            modelBuilder.Entity("LTI.Models.Teacher", b =>
                {
                    b.HasOne("LTI.Models.HistoryTeacher", "HistoryTeacher")
                        .WithMany("Teachers")
                        .HasForeignKey("HistoryTeacherID");
                });
#pragma warning restore 612, 618
        }
    }
}
